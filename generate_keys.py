#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É
"""
import asyncio
import sys
from auth_keys import generate_default_keys, save_keys_to_file
from database import Database
import config
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def load_keys_to_database(keys_data: dict, db: Database):
    """
    –ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª—é—á–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    
    Args:
        keys_data: –°–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏
        db: –≠–∫–∑–µ–º–ø–ª—è—Ä Database
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    await db.init_db()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
    for key_info in keys_data['unlimited_keys']:
        await db.add_access_key(
            key_code=key_info['key'],
            key_type='unlimited',
            image_limit=None
        )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π
    for key_info in keys_data['limited_keys']:
        await db.add_access_key(
            key_code=key_info['key'],
            key_type='limited',
            image_limit=key_info['limit']
        )
    
    logger.info("–í—Å–µ –∫–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 70)
    print("–ì–ï–ù–ï–†–ê–¢–û–† –ö–õ–Æ–ß–ï–ô –î–û–°–¢–£–ü–ê")
    print("=" * 70)
    print()
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
    print("üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π...")
    keys_data = generate_default_keys()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª—é—á–µ–π –≤ —Ñ–∞–π–ª...")
    save_keys_to_file(keys_data, 'access_keys.txt')
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print("üóÑÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª—é—á–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    db = Database(config.DATABASE_PATH)
    await load_keys_to_database(keys_data, db)
    
    print()
    print("=" * 70)
    print("‚úÖ –ì–û–¢–û–í–û!")
    print("=" * 70)
    print()
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   ‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π: {len(keys_data['unlimited_keys'])}")
    print(f"   ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π: {len(keys_data['limited_keys'])}")
    print()
    print(f"üìÅ –§–∞–π–ª—ã:")
    print(f"   ‚Ä¢ –ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: access_keys.txt")
    print(f"   ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {config.DATABASE_PATH}")
    print()
    print("üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –†–∞–∑–¥–∞–π—Ç–µ –∫–ª—é—á–∏ –∏–∑ —Ñ–∞–π–ª–∞ access_keys.txt –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python bot.py")
    print("   3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –∫–æ–º–∞–Ω–¥–æ–π /activate")
    print()
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –•—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª access_keys.txt –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!")
    print("=" * 70)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)
