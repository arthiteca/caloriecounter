#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
"""
import os
import sys


def print_header():
    """–í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print("=" * 60)
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Calorie Counter Bot")
    print("=" * 60)
    print()


def print_section(title):
    """–í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏"""
    print("\n" + "-" * 60)
    print(f"üìã {title}")
    print("-" * 60)


def get_telegram_token():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ Telegram"""
    print_section("Telegram Bot Token")
    print("\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram")
    print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot")
    print("3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω\n")
    
    while True:
        token = input("–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: ").strip()
        if not token:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            continue
        if len(token) < 40:
            print("‚ö†Ô∏è  –¢–æ–∫–µ–Ω –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º. –í—ã —É–≤–µ—Ä–µ–Ω—ã?")
            confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower()
            if confirm != 'y':
                continue
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç: {token[:10]}...{token[-5:]}")
        return token


def get_openai_key():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞ OpenAI"""
    print_section("OpenAI API Key")
    print("\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞:")
    print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://platform.openai.com")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª API Keys")
    print("3. –ù–∞–∂–º–∏—Ç–µ 'Create new secret key'")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!)\n")
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
    print("   - –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ GPT-4")
    print("   - –ù–∞ –∞–∫–∫–∞—É–Ω—Ç–µ –µ—Å—Ç—å –±–∞–ª–∞–Ω—Å")
    print("   - –ö–ª—é—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'sk-'\n")
    
    while True:
        key = input("–í–≤–µ–¥–∏—Ç–µ OpenAI API Key: ").strip()
        if not key:
            print("‚ùå –ö–ª—é—á –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            continue
        if not key.startswith('sk-'):
            print("‚ö†Ô∏è  –ö–ª—é—á OpenAI –æ–±—ã—á–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'sk-'")
            confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower()
            if confirm != 'y':
                continue
        print(f"‚úÖ –ö–ª—é—á –ø—Ä–∏–Ω—è—Ç: {key[:10]}...{key[-5:]}")
        return key


def create_env_file(telegram_token, openai_key):
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞"""
    print_section("–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if os.path.exists('.env'):
        print("\n‚ö†Ô∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        print("–¢–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ.")
        confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower()
        if confirm != 'y':
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return False
        # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        import shutil
        shutil.copy('.env', '.env.backup')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: .env.backup")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    env_content = f"""# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN={telegram_token}

# OpenAI API Configuration
OPENAI_API_KEY={openai_key}
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("\n‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return False


def verify_setup():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print_section("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("\nüîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º check_setup
        if os.path.exists('check_setup.py'):
            import subprocess
            result = subprocess.run([sys.executable, 'check_setup.py'], 
                                  capture_output=False)
            return result.returncode == 0
        else:
            print("‚ö†Ô∏è  –§–∞–π–ª check_setup.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("   –ü—Ä–æ–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
            return True
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return True


def print_next_steps():
    """–í—ã–≤–æ–¥ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤"""
    print("\n" + "=" * 60)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 60)
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
    print("   pip install -r requirements.txt\n")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
    print("   python bot.py\n")
    print("3. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start\n")
    print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    print("   - –ò–ù–°–¢–†–£–ö–¶–ò–Ø.md - –ö—Ä–∞—Ç–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º")
    print("   - README.md - –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
    print("   - QUICKSTART.md - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
    print("   - TROUBLESHOOTING.md - –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\n")
    print("üí° –°–æ–≤–µ—Ç: –ó–∞–ø—É—Å—Ç–∏—Ç–µ python check_setup.py –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n")
    print("=" * 60)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        print_header()
        
        print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.\n")
        print("–í–∞–º –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è:")
        print("  ‚úì Telegram Bot Token (–æ—Ç @BotFather)")
        print("  ‚úì OpenAI API Key (–æ—Ç platform.openai.com)\n")
        
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
        telegram_token = get_telegram_token()
        openai_key = get_openai_key()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
        if not create_env_file(telegram_token, openai_key):
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª")
            return 1
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        verify_setup()
        
        # –í—ã–≤–æ–¥ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤
        print_next_steps()
        
        return 0
        
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 1
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1


if __name__ == "__main__":
    sys.exit(main())
